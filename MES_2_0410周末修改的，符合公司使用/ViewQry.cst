<%-- 
Name:bootstrap前端视图模板
Author: baweixiang
Description: 针对单个表生成的
Date:2016-03-22 12:51:16
Version:1.0
--%>
<%@ Template Language="C#" TargetLanguage="Text" %>

<%-- 加载访问数据库的组件SchemaExplorer,并声明其使用的命名空间 --%>
<%@ Assembly Name="SchemaExplorer"%>
<%@ Import Namespace="SchemaExplorer"%>

<%@ Assembly Name="System.Collections"%>
<%@ Import Namespace="System.Collections.Generic"%>

<%@ Import Namespace="System.Linq" %>
<%-- 选择要操作的表 --%>
<%@ Property Name="Table" Type="SchemaExplorer.TableSchema" DeepLoad="True" Optional="False" Category="01. Getting Started - Required" Description="Database that the tables views, and stored procedures shouldbe based on. IMPORTANT!!! If SourceTables and SourceViews are left blank, theEntire Database will then be generated." %>
打印表中的信息:\n
<%=PrintTableInfo() %>
<script runat="template">
    List<ColumnSchema> lcs=new  List<ColumnSchema>();
    string temKey="",tableName="tableName";
    public string PrintTableInfo()
    {
       // tableName=Table.Name.Split("_").AsQueryable();
        if(Table.PrimaryKey.MemberColumns.Count>0)
        {
            string ouput="";
            if(GetColumnDataType(Table.PrimaryKey.MemberColumns[0],out ouput)=="int")
            {
                temKey="n"+Table.PrimaryKey.MemberColumns[0].Name;
            }else
            {
                temKey="s"+Table.PrimaryKey.MemberColumns[0].Name;
            }
        }
        string colms="Table.FullName---"+Table.FullName;
        for(int i=0;i<Table.Columns.Count;i++)
        {
             colms+=Table.Columns[i].DataType+":"+Table.Columns[i].Name+"\n";
             if(!Table.Columns[i].Name.Equals("STATUS_NO")&&!Table.Columns[i].Name.Equals("CREATE_USERID")&&!Table.Columns[i].Name.Equals("UPDATE_USERID")&&!Table.Columns[i].Name.Equals("CREATE_DATE")&&!Table.Columns[i].Name.Equals("UPDATE_DATE"))
             lcs.Add(Table.Columns[i]);
        }
        return colms;
    }
    
    public string PrintTabelViewHead()
    {
        string trs="\t\t\t\t\t\t\t<th>@xmldoc.SelectSingleNode(\"//ID\").InnerText</th>\n";
        foreach(ColumnSchema csa in lcs)
        {
            trs+="\t\t\t\t\t\t\t<th>@xmldoc.SelectSingleNode(\""+csa.Name+"\").InnerText</th>\n";
        }
        return trs.Substring(0,trs.Length-2);
    }
    
    public string PrintTabelViewBody()
    {
        string trs="\t\t\t\t\t\ttrs += \"<td>\" + _row + \"</td>\";\n";
        foreach(ColumnSchema csa in lcs)
        {
            trs+="\t\t\t\t\t\ttrs += \"<td>\" + item."+csa.Name+" + \"</td>\";\n";
        }
        return trs.Substring(0,trs.Length-2);
    }
    
    public string PrintQryColumns(char t)
    {
        string qs="";
        if(t=='i')
        {
            foreach(ColumnSchema csa in lcs)
            {
                string defaultValue="";
                GetColumnDataType(csa,out defaultValue);
                qs+="\t\t\t\t\""+csa.Name+"\":\""+defaultValue+"\",\n";
            }
        }else
        {
            foreach(ColumnSchema csa in lcs)
            {
                qs+="\t\t\t\t\""+csa.Name+"\":\""+csa.Name+"\",\n";
            }
        }
        if(qs.Length>2)
            return qs.Substring(0,qs.Length-2);
        return qs;
    }
    
    public string PrintAddEdit()
    {    
        string rows="";
        foreach(ColumnSchema csa in lcs)
        {
            rows+="\t\t\t\t\t<div class=\"form-group\">\n";
            rows+="\t\t\t\t\t\t<label class=\"col-sm-4 col-md-2 control-label\">@xmldoc.SelectSingleNode(\"//"+csa.Name+"\").InnerText";
            rows+="<span class=\"required\">*</span></label>\n";
            rows+="\t\t\t\t\t\t<div class=\"col-sm-8 col-md-10\">\n";
            rows+="\t\t\t\t\t\t\t<input type=\"text\" id=\"txt"+getPritStr(csa.Name)+"\" name=\""+csa.Name+"\" class=\"form-control required\" ";
            rows+="@xmldoc.SelectSingleNode(\"//PLEASE_INPUT\").InnerText@xmldoc.SelectSingleNode(\"//"+csa.Name+"\").InnerText\" ";
            rows+="data-msg-required=\"@xmldoc.SelectSingleNode(\"//PLEASE_INPUT\").InnerText@xmldoc.SelectSingleNode(\"//"+csa.Name+"\").InnerText\"/>\n";
            rows+="\t\t\t\t\t\t</div>\n";
            rows+="\t\t\t\t\t</div>\n";
        }
        if(rows.Length>2)
        {
            return rows.Substring(0,rows.Length-2);
        }
        return rows;
    }
    
    public string GetTableSchema()
    {
       string[] arrs= Table.FullName.Split(',');
        if(arrs.Length==2)
            return arrs[0];
        else
            return "";
    }
    
    public string GetColumnDataType(ColumnSchema col,out string defaultValue)
    {
        string type="";
        defaultValue="";
        switch(col.DataType.ToString())
        {
            case "Int16":
            case "Int32":
            case "Int64":type="int";defaultValue="-1";break;
            case "Char":type="char";defaultValue="";break;
            case "AnsiString":type="string";defaultValue="";break;
            case "DateTime":type="DateTime";
                defaultValue="";
                //defaultValue=DateTime.MinValue.ToString("yyyy/MM/dd hh:mm:ss");
                break;
            default: type="string";defaultValue="";break;
        }
        return type;
    }
    
            public string getPritStr(string src)
        {
            string[] strarr=src.Split('_');
            string name="";
            name=strarr[0][0].ToString().ToUpper()+strarr[0].Substring(1).ToLower();
            for(int j=1;j<strarr.Length;j++)
            {
                name+=strarr[j][0].ToString().ToUpper()+strarr[j].Substring(1).ToLower();
            }
            return name;
        }
</script>

@model MES.Models.UserModel
@using System.Xml;
@{
    ViewBag.Title = Model.CURR_PROGRAM;
    XmlDocument xmldoc = (XmlDocument)ViewData["GUI_DATA"];
    XmlDocument xmlError = (XmlDocument)ViewData["ERROR_DATA"];
}
@Html.Partial("Title")

<div id="lstData" class="row">
    <div class="col-sm-12 col-md-12">
        <div class="widget box">
            <div class="widget-header">
                <h4><i class="icon-reorder"></i></h4>
                <div class="toolbar">
                    <div class="btn-group">
                        <a href="javascript:cap_edit('A',-1,'');" class="btn btn-sm btn-info">@xmldoc.SelectSingleNode("//ADDNEW").InnerText</a>
                    </div>
                </div>
            </div>
            <div class="widget-content no-padding table-responsive">
                <table id="tblData" class="table table-hover table-striped table-bordered table-condensed table-high light-head table-responsive">
                    <thead>
                        <tr class="tblHeader">
<%=PrintTabelViewHead() %>
                            <th class='text-center'>@xmldoc.SelectSingleNode("//STATUS_NO").InnerText</th>
                            <th class='text-center'>@xmldoc.SelectSingleNode("//UPDATE").InnerText</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
                <div class="row">
                    <div class="table-footer" style="background-color: #fff;">
                        <div class="col-sm-12 col-md-12">
                            <div id="Pagination" class="pagination" style="text-align: center;"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="edit01" class="row" style="display: none;">
    <div class="col-sm-12 col-md-12">
        <div class="widget box">
            <div class="widget-header">
                <h4>
                    <i class="icon-reorder"></i>
                    <span class="edit-title"></span>
                </h4>
                <input type="hidden" id="TxType" name="TxType" value="" />
                <input type="hidden" id="GROUP_ID" value="-1" />
            </div>
            <div class="widget-content">
                <form class="form-horizontal row-border" id="<%=Table.Name%>-form" method="post">
<%=PrintAddEdit() %>
                </form>
            </div>
            <div class="alert fade in alert-danger" style="display: none;"></div>
        </div>
    </div>
</div>

<!-- ConfirmMessage -->
<div class="modal fade" id="ConfirmMessage" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" id="lblConfirmClose" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 id="ConfirmH4" class="modal-title edit">@xmldoc.SelectSingleNode("//CONFIRM_MESSAGE").InnerText</h4>
            </div>
            <div class="modal-body">
                <label id="lblConfirmMessage" class="widget-header">
                </label>
            </div>
            <div class="modal-footer">
                <button type="button" id="butConfirm" class="btn btn-info" onclick="MessageConfirm('0');">@xmldoc.SelectSingleNode("//SUBMIT").InnerText</button>
                <button type="button" id="butCancel" class="btn btn-primary" onclick="MessageConfirm('1');">@xmldoc.SelectSingleNode("//CANCEL").InnerText</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.ConfirmMessage -->

<script type="text/javascript">
    var obj_form = "#<%=Table.Name%>-form";
    var chkFlag = "0";
    var chkName1 = "";
    var temKey = "";
    var sStatusNo = "";

    $(function () {
        nPageIndex = 0;
        InitData(nPageIndex);
    });

    function InitData(nPageIndex) {
        var tbody = "";
        var RowCount = 0;
        $.ajax({
            type: "POST",
            url: "@Url.Action("Qry<%=Table.Name%>001", "<%=GetTableSchema()%>")",
            async: false,
            dataType: "json",
            data: {
                "PAGE_INDEX": (nPageIndex + 1),
                "PAGE_SIZE": nPageSize,
                "ORDER_BY": "",
<%=PrintQryColumns('i') %>
            },
            beforeSend: function () { $("#divload").show(); $("#Pagination").hide(); },
            complete: function () { $("#divload").hide(); $("#Pagination").show(); },
            success: function (data) {
                $("#tblData tr:gt(0)").remove();
                if (data.msg != "OK") {
                    cap_alert(unescape(data.error_desc));
                    return false;
                }
                else {
                    RowCount = data.table_rows;
                    var TOTAL_PAGE = parseInt(RowCount / nPageSize);
                    if ((RowCount % nPageSize) != 0) { TOTAL_PAGE++; }
                    if (nPageIndex >= TOTAL_PAGE) { nPageIndex = (TOTAL_PAGE - 1); }

                    $.each(data.qrydata, function (i, item) {
                        var _row = (nPageSize * nPageIndex + (i + 1)) + ".";
                        var chk1 = "";
                        if (item.STATUS_NO == "A") { chk1 = "checked"; }

                        var trs = "<tr>";
<%=PrintTabelViewBody() %>
                        trs += "<td class='text-center'><div class='make-switch switch-small' id='chkStatusNO" + i + "' data-on='success' data-off='danger' data-on-label='@xmldoc.SelectSingleNode("//CHECK_ACTIVE").InnerText'  data-off-label='@xmldoc.SelectSingleNode("//CHECK_STOP").InnerText'><input name1='" + i + "'  type='checkbox' name='chk2' " + chk1 + " class='toggle' value='" + item.GROUP_ID + "'/></div></td>";
                        trs += "<td class='text-center'><a href='javascript:cap_port(\"" + item.GROUP_ID + "\");' class='btn btn-sm btn-success'>@xmldoc.SelectSingleNode("//TEST_TYPE").InnerText</a></td>";
                        trs += "<td class='text-center' style='@Model.Update'><a href='javascript:cap_edit(\"U\",\"" + item.<%=Table.PrimaryKey.MemberColumns[0].Name %>+ "\");'  class='btn btn-sm btn-primary'>@xmldoc.SelectSingleNode("//UPDATE").InnerText</a></td>";
                        trs += "</tr>";
                        tbody += trs;
                    });
                }
                $("#tblData tbody").append(tbody);
                $("#tblData tbody .make-switch").bootstrapSwitch({
                }).on('switch-change', function (e, data) {
                    chkName1 = $('#chkStatusNO' + $(data.el).attr("name1"));
                    if (chkFlag == "0") {
                        if (data.value == false) {
                            chkFlag = "1";
                            $('#chkStatusNO' + $(data.el).attr("name1")).bootstrapSwitch('setState', true);
                            chkFlag = "0";
                        }
                        else {
                            chkFlag = "1";
                            $('#chkStatusNO' + $(data.el).attr("name1")).bootstrapSwitch('setState', false);
                            chkFlag = "0";
                        }
                        cap_status($(data.el).val(), (data.value == true) ? "A" : "S");
                    }
                });
            }
        });
        cap_pagination(RowCount);
    }

    function cap_status(<%=Table.PrimaryKey.MemberColumns[0].Name %>, STATUS_NO) {
        n<%=Table.PrimaryKey.MemberColumns[0].Name %> = <%=Table.PrimaryKey.MemberColumns[0].Name %>;
        sStatusNo = STATUS_NO;
        MessageConfirm("2");
    }

    function MessageConfirm(value) {
        $("#butConfirm").show();
        $("#butCancel").show();
        $("#ConfirmH4").html("@xmldoc.SelectSingleNode("//CONFIRM_OK").InnerText");
        $("#lblConfirmMessage").html("@xmldoc.SelectSingleNode("//ITEM_CONFIRM").InnerText");
        if (value == "1") { $("#ConfirmMessage").modal('hide'); return false; } else { $("#ConfirmMessage").modal('show'); }
        if (value == "0") {
            $("#ConfirmMessage").modal('hide');
            $.ajax({
                type: "POST",
                url: "@Url.Action("TxTestGroup001", "WBAS")",
                async: false,
                dataType: "json",
                data: {
                    "TxType": "C",
                    "GROUP_ID": n<%=Table.PrimaryKey.MemberColumns[0].Name %>,
                    "GROUP_NAME_CH": "",
                    "GROUP_NAME_EN": "",
                    "GROUP_DESC": "",
                    "CHECK_TYPE": "",
                    "STATUS_NO": sStatusNo
                },
                beforeSend: function () { $("#divload").show(); },
                complete: function () { $("#divload").hide(); },
                success: function (data) {
                    if (data.msg == "OK") {
                        cap_close("lstData", "edit01");
                        if (sStatusNo == "A") { chkFlag = "1"; $(chkName1).bootstrapSwitch('setState', true); } else { chkFlag = "1"; $(chkName1).bootstrapSwitch('setState', false); }
                    }
                    else {
                        cap_alert(unescape(data.error_desc));
                    }
                }
            });
            chkFlag = "0";
        }
    }

    function cap_edit(TxType, GROUP_ID) {
        cap_clear(obj_form);
        var sTitle = '@xmldoc.SelectSingleNode("//TEST_GROUP_DATA").InnerText' + ' - ';

         $("#TxType").val(TxType);
         switch (TxType) {
             case "A":
                 cap_close("edit01", "lstData");
                 $(".edit-title").html(sTitle + '@xmldoc.SelectSingleNode("//ADDNEW").InnerText');
                break;
            case "U":
                cap_close("edit01", "lstData");
                $(".edit-title").html(sTitle + '@xmldoc.SelectSingleNode("//UPDATE").InnerText');
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("QryTestGroup001", "WBAS")",
                    async: false,
                    dataType: "json",
                    data: {
                        "PAGE_INDEX": -1,
                        "PAGE_SIZE": -1,
                        "ORDER_BY": "",
                        "GROUP_ID": GROUP_ID,
                        "GROUP_NAME_CH": "",
                        "GROUP_NAME_EN": "",
                        "CHECK_TYPE": "",
                        "STATUS_NO": ""
                    },
                    success: function (data) {
                        if (data.msg == "OK") {
                            $.each(data.qrydata, function (i, item) {
                                $("#GROUP_ID").val(GROUP_ID);
                                $("#txtGroupNameCh").val(item.GROUP_NAME_CH);
                                $("#txtGroupNameEn").val(item.GROUP_NAME_EN);
                            });
                        }
                        else {
                            cap_alert(unescape(data.error_desc));
                        }
                    }
                });
                break;
        }
    }

    function cap_save() {
        if ($(obj_form).valid()) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("TxTestGroup001", "WBAS")",
                async: false,
                dataType: "json",
                data: {
                    "TxType": $("#TxType").val(),
                    "GROUP_ID": $("#GROUP_ID").val(),
                    "GROUP_NAME_CH": $("#txtGroupNameCh").val(),
                    "GROUP_NAME_EN": $("#txtGroupNameEn").val(),
                    "STATUS_NO": ""
                },
                beforeSend: function () { $("#divload").show(); },
                complete: function () { $("#divload").hide(); },
                success: function (data) {
                    if (data.msg == "OK") {
                        cap_close("lstData", "edit01");
                        InitData(nPageIndex);
                    }
                    else {
                        cap_alert(unescape(data.error_desc));
                    }
                }
            });
        }
    }

    function cap_port(GROUP_ID) {
        window.location = "@Url.Action("WBAS502", "WBAS")" + "?GROUP_ID=" + GROUP_ID;
    }
</script>
