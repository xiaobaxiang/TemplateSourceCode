<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
html
{
overflow-x:hidden;
overflow-y:auto;
}
body,td,th {
font-family: "微软雅黑";
font-size: 12px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
p{
margin-bottom:10px;
}
demo_padding {
line-height: 30px;
}
.zhengwen {
padding-right: 15px;
padding-left: 5px;
padding-bottom:100px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px solid #999999;
padding-right: 10px;
padding-left: 10px;
margin-top:10px;
margin-left:25px;
width:300px;
}
.shubu{
height: 20px;
width: 20px;
margin-left:25px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
color: #666666;
}
a.red:link {color:#FF0000}
a.red:visited {color:#FF0000}
a.red:hover {color:#000000}
a.red:active {color:#000000}

a.orange:link {color:#FF6600}
a.orange:visited {color:#FF6600}
a.orange:hover {color:#000000}
a.orange:active {color:#000000}

a.dark:link {color:#666666}
a.dark:visited {color:#666666}
a.dark:hover {color:#000000}
a.dark:active {color:#000000}

a.pagelink:hover {color:#000000}
a.pagelink:active {color:#000000}

.green{color:#008000}
.gray{color:#666666}
.red{color:#FF0000}
.orange{color:#FF6600}
a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>


<div class="zhengwen">

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">1</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>国内外应用和研发现状</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">2</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>玫瑰碗跳蚤市场。</span><a href='../sentence_detail/2.htm' target='right' class='red' >美国加利福尼亚州( Califomia)帕萨迪那市玫瑰碗跳蚤市场设在 UCLA Bruins橄榄球场内，</a><a href='../sentence_detail/3.htm' target='right' class='red' >球场可容纳2000多名小贩并将他们分类划区，因此可以很容易找到所需商品。</a><a href='../sentence_detail/4.htm' target='right' class='red' >在古玩和收藏品区域，会发现很多在商店里买不到的旧式珍稀物品，如午餐盒或电影海报。</a><a href='../sentence_detail/5.htm' target='right' class='red' >在出售新商品的区域，也可以买到美容产品、办公家具甚至宠物食品等各类物品。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">3</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>义卖店。</span><a href='../sentence_detail/7.htm' target='right' class='red' >据资料显示，目前美国许多慈善机构都设有专门的义卖店铺。</a><a href='../sentence_detail/8.htm' target='right' class='red' >这些商店把收到的捐赠物品分门别类廉价出售。</a><a href='../sentence_detail/9.htm' target='right' class='red' >义卖所得用来资助社会上需要帮助的人，店铺的店员都由志愿者组成，无偿提供服务。</a><a href='../sentence_detail/10.htm' target='right' class='red' >美国之所以能形成全民参与慈善捐赠事业，与美国政府的政策鼓励有很大关系。</a><a href='../sentence_detail/11.htm' target='right' class='red' >捐赠者在每年缴纳个人所得税时，拿着捐赠证明就可以抵扣一定的税金，捐赠的物品也会按照慈善机构开具的收据在报税时估价以便抵税。</a><span class='green'>这大大提高了人们主动捐赠的热情。</span><a href='../sentence_detail/13.htm' target='right' class='red' >此外，慈善机构的公司化运营模式、透明化管理制度也是促使民众放心捐赠的另一大要素。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">4</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>§1.4 论文主要内容</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">5</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>论文在布局上参考软件工程的流程来实现，每个章节都进行了详略得当的阐述。</span><span class='green'>需求分析部分使用了基于用例的方法，并对状态进行详细解释；</span><a href='../sentence_detail/17.htm' target='right' class='orange' >系统设计从架构设计和数据库设计两方面入手，尤其在数据库分析上使用了常见的数据库三步分析模式；</a><a href='../sentence_detail/18.htm' target='right' class='orange' >系统实现从主要使用的技术入手，阐述了平台实现的关键点。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">6</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>第2章 理论基础和关键技术</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">7</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>§2.1 JSON数据格式</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">8</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/21.htm' target='right' class='orange' >Json是JavaScript中的对象和数组，通过对象和数组这两种结构可以表示各种复杂的结构。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">9</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>1）对象：</span><a href='../sentence_detail/23.htm' target='right' class='red' >对象在js中表示为“{}”括起来的内容，数据结构为 {key：</a><span class='green'>value，key：</span><a href='../sentence_detail/25.htm' target='right' class='red' > value，...}的键值对的结构，在面向对象的语言中， key为对象的属性，</a><a href='../sentence_detail/26.htm' target='right' class='red' > value为对应的属性值，所以很容易理解，取值方法为对象. key获取属性值，</a><a href='../sentence_detail/27.htm' target='right' class='red' >这个属性值的类型可以是数字、字符串、数组、对象几种。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">10</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2）数组：</span><a href='../sentence_detail/29.htm' target='right' class='red' >数组在 js中是中括号“[]”括起来的内容，数据结构为[” java”，</a><span class='green'>” javascript”，” vb”，...]，取值方式和所有语言中一样，</span><a href='../sentence_detail/31.htm' target='right' class='red' >使用索引获取，字段值的类型可以是数字、字符串、数组、对象几种。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">11</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/32.htm' target='right' class='red' >经过对象、数组2种结构的组合就可以形成复杂的数据结构。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">12</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>使用json作为数据传输格式，可以提高效数据率，减少带宽占用。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">13</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>§2.2 BootStrap框架</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">14</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>Bootstrap，来自 Twitter，是目前很受欢迎的前端框架。</span><span class='green'>Bootstrap 是基于 HTML、CSS、JAVASCRIPT 的，它简洁灵活，使得 Web 开发更加快捷。</span><a href='../sentence_detail/37.htm' target='right' class='red' >它由Twitter的设计师Mark Otto和Jacob Thornton合作开发，是一个响应式框架。</a><span class='green'>Bootstrap提供了优雅的HTML和CSS规范，它即是由动态CSS语言Less写成。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">15</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/39.htm' target='right' class='red' >Bootstrap是基于HTML5和CSS3开发的，它在jQuery的基础上进行了更为个性化和人性化的完善，形成一套自己独有的网站风格，并兼容大部分jQuery插件。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">16</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/40.htm' target='right' class='red' >Bootstrap中包含了丰富的Web组件，根据这些组件，可以快速的搭建一个漂亮、功能完备的网站。</a><span class='green'>包括以下组件：</span><a href='../sentence_detail/42.htm' target='right' class='red' >下拉菜单、按钮组、按钮下拉菜单、导航、导航条、路径导航、分页、排版、缩略图、警告对话框、进度条、媒体对象等。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">17</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/43.htm' target='right' class='red' >Bootstrap自带了13个jQuery插件，这些插件为Bootstrap中的组件赋予了“生命”。</a><span class='green'>其中包括：</span><a href='../sentence_detail/45.htm' target='right' class='red' >模式对话框、标签页、滚动条、弹出框等。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">18</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>§2.3 Asp.net MVC框架</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">19</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>MVC (Model、View、Controller)将一个Web应用分解为：</span><span class='green'>Model、View和Controller。</span><a href='../sentence_detail/49.htm' target='right' class='red' >ASP.NET MVC框架提供了一个可以代替Web Form的基于MVC设计模式的应用。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">20</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>ASP.NET MVC概述MVC框架特色：</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">21</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/51.htm' target='right' class='red' >1）分离任务（输入逻辑，业务逻辑和显示逻辑），易于测试和默认支持测试驱动开发（TDD）。</a><a href='../sentence_detail/52.htm' target='right' class='red' >所有MVC用到的组件都是基于接口并且可以在进行测试时进行Mock，在不运行ASP.NET进程的情况下进行测试，使得测试更加快速和简捷。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">22</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>2）可扩展的简便的框架。</span><a href='../sentence_detail/54.htm' target='right' class='red' >MVC框架被设计用来更轻松的移植和定制功能。</a><span class='green'>可以自定义视图引擎、UrlRouting规则及重载Action方法等。</span><span class='green'>MVC也支持Dependency Injection (DI，依赖注入) and Inversion of Control (IoC，控制反转）的良好支持。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">23</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/57.htm' target='right' class='red' >3）强大的UrlRouting机制可以更方便的建立容易理解和可搜索的Url，为SEO提供更好的支持。</a><a href='../sentence_detail/58.htm' target='right' class='red' >Url可以不包含任何文件扩展名，并且可以重写Url使其对搜索引擎更加友好。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">24</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/59.htm' target='right' class='red' >4）可以使用ASP.NET现有的页面标记、用户控件、模板页。</a><a href='../sentence_detail/60.htm' target='right' class='red' >可以使用嵌套模板页，嵌入表达式[%=%]，声明服务器控件、模板，数据绑定、定位等等。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">25</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/61.htm' target='right' class='red' >5）对现有的 ASP. NET程序的支持， MVC仍然可以使用如窗体认证和 Windows认证、 url认证、</a><span class='green'>组管理和规则、输出、数据缓存、 session、 profile、 health monitoring、配置管理系统、 provider architecture特性。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">26</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>§2.5 ADO.NET</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">27</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>ADO.NET的名称起源于ADO（ActiveX Data Objects），是一个COM组件库，用于在以往的Microsoft技术中访问数据。</span><a href='../sentence_detail/65.htm' target='right' class='red' >这是在NET编程环境中优先使用的数据访问操作方法。</a><a href='../sentence_detail/66.htm' target='right' class='red' >ADO.NET是改进的ADO数据访问模型用于开发可扩展应用程序。</a><a href='../sentence_detail/67.htm' target='right' class='red' >它是专门为可伸缩性、无状态和XML核心的web而设计的。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">28</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><span class='green'>ADO.NET使用一些ADO对象，如Connection和Command对象，也引入了一些新对象。</span><span class='green'>关键的新对象包括DataSet，DataReader，DataAdapter等。</span>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">29</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/70.htm' target='right' class='red' >这种改进的ADO.NET和之前的数据架构的一个重要区别在于存在一个DataSet对象，它不同于任何以前的数据存储。</a><span class='green'>正因为如此，DataSet能够作为独立的实体集。</span><a href='../sentence_detail/72.htm' target='right' class='red' >可以将DataSet理解为总是断开连接对它包含的数据源和目标一无所知的记录集，在DataSet内部，就像一个数据库一样，有表，列，关系，约束，视图等等。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">30</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/73.htm' target='right' class='red' >DataAdapter是一种连接到数据库来填充DataSet的对象。</a><a href='../sentence_detail/74.htm' target='right' class='red' >然后连接回数据库更新数据，基于DatSet拥有数据的基本操作。</a><span class='green'>在过去，数据处理一直是基于连接的。</span><a href='../sentence_detail/76.htm' target='right' class='red' >现在，为了使多层应用更高效，数据处理正在转向基于消息的方式。</a><a href='../sentence_detail/77.htm' target='right' class='red' >这种处理方式的核心是DataAdapter，提供了在DataSet和数据源之间用于检索和保存数据的桥梁。</a><a href='../sentence_detail/78.htm' target='right' class='red' >它是通过对数据存储请求正确的SQL指令实现的。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">31</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/79.htm' target='right' class='red' >基于XML的DataSet对象提供了一个统一的编程模型，以至于适用于所有的数据存储：</a><span class='green'>结构型，关系型，和层级型。</span><a href='../sentence_detail/81.htm' target='right' class='red' >无论DataSet内部是什么数据源，都是通过调用同一套标准API暴露给相关对象的。</a>
</p>
</div>

<div>
<p>
<table border="0" width="100%" cellspacing="0" cellpadding="0">
<tr>
<td align="left" width="50"><div class="shubu">32</div></td>
<td>&nbsp;&nbsp;</td>
</tr>
</table>

<span style="margin-left:25px"></span><a href='../sentence_detail/82.htm' target='right' class='red' >当DataSet对数据源不可知的时候，托管提供程序享有详尽的具体信息。</a><a href='../sentence_detail/83.htm' target='right' class='red' >托管提供程序的作用是连接，填充，并从数据存储持久化DataSet。</a><span class='green'>OLE DB和SQL Server .</span><span class='green'>NET 框架部分的数据提供程序（System.Data.OleDb和System.Data.SqlClient）提供了四个基本对象：</span><span class='green'>Command对象，Connection对象，DataReader对象和DataAdapter对象。</span>
</p>
</div>



<br>
<div style="margin-left:8px">

<div style="text-align:center;background-color:#CA122C;margin-top:30px;overflow:hidden;">
<a href="http://www.paperpass.com/publish/index?from=ppreport_banner" target="_blank" style="display:block;"><img height="180" src="http://file.paperpass.com/images/fabiao.jpg"></a>
</div>

</div>
</div>


<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2016 PaperPass
</p>
</div>
<div style="margin-bottom:400px"></div>
</body>
</html>
